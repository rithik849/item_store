services:
    item-store-frontend:
        image: rithik256/item-store:frontend
        container_name: frontend
        build:
            context: ./frontend/item-store
            dockerfile: Dockerfile
        ports:
          - "3000:80"
        depends_on:
            - item-store-backend
        healthcheck:
          test: "echo 'hello'"

    item-store-backend:
        image: rithik256/item-store:backend
        container_name: backend
        build:
            context: ./backend
            dockerfile: Dockerfile
        ports:
          - "8000:8000"
        env_file:
            - ./backend/default.env
        depends_on:
            - db
        healthcheck:
            test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null http://127.0.0.1:8000/"
            start_period: 60s
            interval: 60s
            timeout: 10s
            retries: 10
        
    db:
        image: postgres:17.2
        user: postgres
        container_name: pg_prod
        environment:
            - POSTGRES_PASSWORD=postgres
        ports:
        - 5432:5432
        volumes:
        - ./db_volume/data:/var/lib/postgresql/data
        - ./db_volume/init:/docker-entrypoint-initdb.d
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
            interval: 30s
            timeout: 60s
            retries: 5
            start_period: 80s

